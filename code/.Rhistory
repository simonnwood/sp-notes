hist(runif(100))
set.seed(1)
if (runif(1)>.5) {
cat("heads")
} else {
cat("tails")
}
set.seed(1)
if (runif(1)>.5) {
cat("heads")
} else {
cat("tails")
}
set.seed(1)
if (runif(1)>.5) {
cat("heads")
} else {
cat("tails")
}
set.seed(1)
if (runif(1)>.5) {
cat("heads")
} else {
cat("tails")
}
if (runif(1)>.5) {
cat("heads")
} else {
cat("tails")
}
if (runif(1)>.5) {
cat("heads")
} else {
cat("tails")
}
if (runif(1)>.5) {
cat("heads")
} else {
cat("tails")
}
if (runif(1)>.5) {
cat("heads")
} else {
cat("tails")
}
if (runif(1)>.5) {
cat("heads")
} else {
cat("tails")
}
getwd()
setwd("/home/sw283/lnotes/StatProg/sp-notes/code")
source("hello.r")
a <- "some stuff"
alice <- list(age=45,height=1.65,weight=60)
Ba <- matrix(1:16,4,4)
dump(c("a","alice","Ba"),file="stuff.R")
rm(list=ls());ls()
source("stuff.R")
a <- scan("data.txt",what="c");a
b <- scan("data.txt",what=list("a",1,1),skip=1); b
scan("data.txt",what="c",n=3)
names(b) <- scan("data.txt",what="c",n=3)
b
d <- data.frame(b); d
d <- read.table("data.txt",header=TRUE)
d
d$name[1] <- "susan"
d
write.table(d,file="data1.txt")
A <- matrix(1:6,3,2); y <- rnorm(100) ## create some objects
save(A,y,file="stuff.Rd") ## save them to a binary file
rm(list=ls())
load("stuff.Rd") ## load them back in again from the file
raw <- readLines("https://michaelgastner.com/DAVisR_data/homicides.txt")
raw[1:2]
marks <- data.frame(name=rep(c("george","anna","heike"),each=3),
d.o.b.=rep(c("11/2/01","15/6/00","12/12/02"),each=3),
nationality=rep(c("GB","GB","DE"),each=3),
week=rep(1:3,3),grade=c("B","C","A","A","B","A","D","B","A"))
marks
student <- unique(marks[,c("name","d.o.b.","nationality")])
student
library(mgcv)
student <- uniquecombs(marks[,c("name","d.o.b.","nationality")])
ind <- attr(student,"index")
student
ind
raw[1]
raw[300]
rl <- strsplit(raw,",")
rl[1:2]
lat <- as.numeric(sapply(rl,function(x) x[1]))
lon <- as.numeric(sapply(rl,function(x) x[2]))
raw[453]
?regex
txt <- "He scribbled a note on his clipboard and clicked his heels as he clinched the deal."
grep("c.i",strsplit(txt," ")[[1]])
txt1 <- "To flunk this exam would be disaster, thought Phil, picking up his fork to eat "
grep("f.*k",strsplit(txt1," ")[[1]])
txt2 <- "Flunk this exam and Iâ€™ll be toast, thought Farouk, forking beans into his mouth."
grep("f.*k",strsplit(txt2," ")[[1]])
grep("\\b[Ff].*k\\b",strsplit(txt2," ")[[1]])
get.name <- function(x) {
x1 <- gsub(".*<dt>","",x) ## strip out everything to <dt>
x1 <- gsub("</dt>.*","",x1) ## strip out everything after </dt>
x1 <- gsub("<a.*\">","",x1) ## strip out any web addresses
sub("</.*","",x1) ## strip out any further tags
}
name <- sapply(raw,get.name,USE.NAMES=FALSE)
head(name)
rl <- strsplit(raw,"<dd>")
race <- sapply(rl,function(x) sub("<.*","",x[2]) )
ii <- grep("Race:",race)
race[ii] <- gsub("Race: ","",race[ii])
race[-ii] <- gsub(" .*","",race[-ii])
dat <- data.frame(lon=lon,lat=lat,name=name,race=tolower(race))
head(dat)
with(dat,plot(lon,lat,pch=19,cex=.5))
ii <- dat$race=="white"
points(dat$lon[ii],dat$lat[ii],col="pink",pch=19,cex=.6)
ii <- dat$race=="hispanic"
points(dat$lon[ii],dat$lat[ii],col="brown",pch=19,cex=.6)
ii <- !(dat$race=="black"|dat$race=="white"|dat$race=="hispanic")
points(dat$lon[ii],dat$lat[ii],pch=19,cex=.5,col="green")
n <- 100000
## A
u <- .1
system.time(for (i in 2:n) u <- c(u,u[i-1]*(1-u[i-1])*3.7))
u <- .1
system.time(for (i in 2:n) u[i] <- u[i-1]*(1-u[i-1])*3.7)
u <- rep(.1,n)
system.time(for (i in 2:n) u[i] <- u[i-1]*(1-u[i-1])*3.7)
library(rjags)                ## load rjags (and coda)
setwd("~sw283/lnotes/StatProg/sp-notes/code")
mod <- jags.model("basic.jags",data=list(x=nhtemp,N=length(nhtemp)))
sam <- jags.samples(mod,c("mu","tau"),n.iter=10000)
str(sam)
sam.coda <- coda.samples(mod,c("mu","tau"),n.iter=10000)
str(sam.coda)
plot(sam.coda)
acfplot(sam.coda)
crosscorr(sam.coda)
effectiveSize(sam.coda)
HPDinterval(sam.coda[[1]])
apply(sam.coda[[1]],2,quantile,prob=(c(0.025,.975)))
N <- length(nhtemp)
mod2 <- jags.model("basic2.jags",data=list(x=nhtemp,t=1:N,N=N))
sam2.coda <- coda.samples(mod2,c("alpha","beta","tau","df"),n.iter=10000)
plot(sam2.coda)
plot(sam2.coda[[1]][,1:2])
effectiveSize(sam2.coda)
crosscorr(sam2.coda)
acfplot(sam2.coda,aspect=1)
mod2 <- jags.model("basic2.jags",data=list(x=nhtemp,t=1:N-N/2,N=N))
sam2.coda <- coda.samples(mod2,c("alpha","beta","tau","df"),n.iter=10000)
plot(sam2.coda)
effectiveSize(sam2.coda)
crosscorr(sam2.coda)
acfplot(sam2.coda,aspect=1)
mod <- jags.model("basic.jags",data=list(x=nhtemp,N=length(nhtemp)),n.chains=2)
mod2 <- jags.model("basic2.jags",data=list(x=nhtemp,t=1:N,N=N),n.chains=2)
dic.samples(mod,n.iter=10000)
dic.samples(mod2,n.iter=10000)
library(rjags)                ## load rjags (and coda)
setwd("~sw283/lnotes/StatProg/sp-notes/code")
mod <- jags.model("basic.jags",data=list(x=nhtemp,N=length(nhtemp)))
sam <- jags.samples(mod,c("mu","tau"),n.iter=10000)
str(sam)
sam.coda <- coda.samples(mod,c("mu","tau"),n.iter=10000)
str(sam.coda)
plot(sam.coda)
acfplot(sam.coda)
crosscorr(sam.coda)
effectiveSize(sam.coda)
HPDinterval(sam.coda[[1]])
apply(sam.coda[[1]],2,quantile,prob=(c(0.025,.975)))
N <- length(nhtemp)
mod2 <- jags.model("basic2.jags",data=list(x=nhtemp,t=1:N,N=N))
sam2.coda <- coda.samples(mod2,c("alpha","beta","tau","df"),n.iter=10000)
plot(sam2.coda)
plot(sam2.coda[[1]][,1:2])
plot(sam2.coda[[1]][,3:4])
effectiveSize(sam2.coda)
crosscorr(sam2.coda)
acfplot(sam2.coda,aspect=1)
mod2 <- jags.model("basic2.jags",data=list(x=nhtemp,t=1:N-N/2,N=N))
sam2.coda <- coda.samples(mod2,c("alpha","beta","tau","df"),n.iter=10000)
plot(sam2.coda[[1]][,1:2])
effectiveSize(sam2.coda)
crosscorr(sam2.coda)
acfplot(sam2.coda,aspect=1)
mod <- jags.model("basic.jags",data=list(x=nhtemp,N=length(nhtemp)),n.chains=2)
mod2 <- jags.model("basic2.jags",data=list(x=nhtemp,t=1:N,N=N),n.chains=2)
dic.samples(mod,n.iter=10000)
dic.samples(mod2,n.iter=10000)
